name: Build WSA
on:
 workflow_dispatch:
  inputs:
   arch:
    type: choice
    description: "Architecture WSA:"
    required: true
    options: [x64, ARM64]
    default: x64
   release_type:
    type: choice
    description: "WSA Release Channel:"
    required: true
    options: [General Availability, Release Preview, Beta, Dev]
    default: Release Preview
   gapps_brand:
    type: choice
    description: "GApps brand. ”None” - without GApps:"
    required: true
    options: [None, MindTheGapps]
    default: MindTheGapps
   magisk_ver:
    type: choice
    description: "Magisk version. ”None” - without Magisk:"
    required: true
    options: [None, Stable, Beta, Canary, Debug, Delta Canary]
    default: Stable
   remove_amazon:
    description: "Remove Amazon AppStore"
    required: true
    default: true
    type: boolean
permissions:
  contents: write
  actions: write
jobs:
  Build-WSA:
    name: Build WSA
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Install dependencies
        run: |
          sudo apt-get update;sudo apt-get install -y setools lzip wine patchelf e2fsprogs python3-pip aria2 p7zip-full attr xz-utils unzip cabextract
          aria2c -d /usr/local/bin/ https://raw.githubusercontent.com/Winetricks/winetricks/master/src/winetricks
          sudo chmod +x /usr/local/bin/winetricks
          python3 -m pip install requests
          winetricks msxml6
      - name: Build WSA
        id: build_wsa
        working-directory: MagiskOnWSALocal
        run: |
          declare -A opts=( ["ARCH,x64"]="x64" ["ARCH,ARM64"]="arm64" ["RELEASE_TYPE,General Availability"]="retail" ["RELEASE_TYPE,Release Preview"]="RP" ["RELEASE_TYPE,Beta"]="WIS" ["RELEASE_TYPE,Dev"]="WIF" ["MAGISK_VER,Delta Canary"]="--magisk-custom" ["MAGISK_VER,None"]="--root-sol none" ["MAGISK_VER,Stable"]="--magisk-ver stable" ["MAGISK_VER,Beta"]="--magisk-ver beta" ["MAGISK_VER,Canary"]="--magisk-ver canary" ["MAGISK_VER,Debug"]="--magisk-ver debug" ["GAPPS_BRAND,MindTheGapps"]="MindTheGapps" ["GAPPS_BRAND,None"]="none" ["REMOVE_AMAZON,true"]="--remove-amazon" )
          if [[ "${{ inputs.magisk_ver }}" == "Delta Canary" ]]; then
            aria2c -d ./download -o magisk-stable.zip https://huskydg.github.io/magisk-files/app-release.apk
          fi
            echo "arch=${opts[ARCH,${{ inputs.arch }}]}" >> $GITHUB_OUTPUT
          scripts/build.sh \
          --arch ${opts[ARCH,${{ inputs.arch }}]} \
          --release-type ${opts[RELEASE_TYPE,${{ inputs.release_type }}]} \
          ${opts[REMOVE_AMAZON,${{ inputs.remove_amazon }}]} \
          ${opts[MAGISK_VER,${{ inputs.magisk_ver }}]} \
          --gapps-brand ${opts[GAPPS_BRAND,${{ inputs.gapps_brand }}]}
      - name: Archiving and compressing artifact
        working-directory: MagiskOnWSALocal/output
        run: |
          7z a -tzip -mx=4 -mmt=104 -saa *
      - name: Get WSA version tag
        shell: bash
        run: |
          cd MagiskOnWSALocal/output/
          echo "wsaname=$(basename $(ls *.zip) .zip)" >> $GITHUB_ENV
      - name: Upload Release Asset
        uses: softprops/action-gh-release@v1
        with:
          files: MagiskOnWSALocal/output/*
          tag_name: ${{ env.wsaname }}
          name: ${{ env.wsaname }}
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.wsaname }}
          path: MagiskOnWSALocal/output/${{ env.wsaname }}/
      - name: Delete workflow runs
        uses: Mattraks/delete-workflow-runs@v2
        with:
          token: ${{ github.token }}
          repository: ${{ github.repository }}
          retain_days: 1
          keep_minimum_runs: 0
